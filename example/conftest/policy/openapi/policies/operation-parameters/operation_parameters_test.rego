package openapi.policies["operation-parameters"]

test_duplicate_parameters_fails = true { assign(mock_input, {"paths": {"/users": {"get": {"parameters": [{"in": "header", "name": "a"}, {"in": "header", "name": "a"}]}}}, "tags": []}); assign(result1, {"code": "operation-parameters", "message": "A parameter in this operation already exposes the same combination of \"name\" and \"in\" values.", "path": ["paths", "/users", "get", "parameters", "0"]}); assign(result2, {"code": "operation-parameters", "message": "A parameter in this operation already exposes the same combination of \"name\" and \"in\" values.", "path": ["paths", "/users", "get", "parameters", "1"]}); assign(res, results) with input as mock_input; res[result1]; res[result2] }
test_both_body_and_formdata_params_fails = true { assign(mock_input, {"paths": {"/users": {"get": {"parameters": [{"in": "body", "name": "a"}, {"in": "formData", "name": "b"}]}}}, "tags": []}); assign(result, {"code": "operation-parameters", "message": "Operation must not have both \"in:body\" and \"in:formData\" parameters.", "path": ["paths", "/users", "get", "parameters"]}); results[result] with input as mock_input }
test_multiple_body_params_fails = true { assign(mock_input, {"paths": {"/users": {"get": {"parameters": [{"in": "body", "name": "a"}, {"in": "body", "name": "b"}]}}}, "tags": []}); assign(result1, {"code": "operation-parameters", "message": "Operation must not have more than a single instance of the \"in:body\" parameter.", "path": ["paths", "/users", "get", "parameters", "0"]}); assign(result2, {"code": "operation-parameters", "message": "Operation must not have more than a single instance of the \"in:body\" parameter.", "path": ["paths", "/users", "get", "parameters", "1"]}); assign(res, results) with input as mock_input; res[result1]; res[result2] }
test_unique_parameters_succeeds = true { assign(a, results) with input as {"paths": {"/users": {"get": {"parameters": [{"in": "header", "name": "a"}, {"in": "header", "name": "b"}]}}}, "tags": []}; equal(count(a), 0) }
test_single_body_or_formdata_param_succeeds = true { assign(a, results) with input as {"paths": {"/users": {"get": {"parameters": [{"in": "header", "name": "a"}, {"in": "body", "name": "b"}]}}}, "tags": []}; equal(count(a), 0); assign(b, results) with input as {"paths": {"/users": {"get": {"parameters": [{"in": "header", "name": "a"}, {"in": "formData", "name": "b"}]}}}, "tags": []}; equal(count(b), 0) }
test_single_body_param_succeeds = true { assign(a, results) with input as {"paths": {"/users": {"get": {"parameters": [{"in": "header", "name": "a"}, {"in": "body", "name": "b"}]}}}, "tags": []}; equal(count(a), 0) }